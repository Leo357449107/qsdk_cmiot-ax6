From 90cee50f314c39f48eff3843343a960533ae68b5 Mon Sep 17 00:00:00 2001
From: Naresh Parati <cnparat@codeaurora.org>
Date: Wed, 7 Oct 2020 08:30:50 +0530
Subject: [PATCH] wireless-tools: Copy patches from cc/date branch to fig

Change-Id: If101953d1226208fcd5f4545976c622961c8e816
Signed-off-by: Naresh Parati <cnparat@codeaurora.org>

--- a/iwconfig.c
+++ b/iwconfig.c
@@ -100,7 +100,7 @@ get_info(int			skfd,
 #ifndef WE_ESSENTIAL
   /* Get NickName */
   wrq.u.essid.pointer = (caddr_t) info->nickname;
-  wrq.u.essid.length = IW_ESSID_MAX_SIZE + 1;
+  wrq.u.essid.length = IW_ESSID_MAX_SIZE + 2;
   wrq.u.essid.flags = 0;
   if(iw_get_ext(skfd, ifname, SIOCGIWNICKN, &wrq) >= 0)
     if(wrq.u.data.length > 1)
@@ -619,7 +619,7 @@ set_essid_info(int		skfd,
 {
   struct iwreq		wrq;
   int			i = 1;
-  char			essid[IW_ESSID_MAX_SIZE + 1];
+  char			essid[4 * IW_ESSID_MAX_SIZE + 1];
   int			we_kernel_version;
 
   if((!strcasecmp(args[0], "off")) ||
@@ -634,7 +634,7 @@ set_essid_info(int		skfd,
 	/* Get old essid */
 	memset(essid, '\0', sizeof(essid));
 	wrq.u.essid.pointer = (caddr_t) essid;
-	wrq.u.essid.length = IW_ESSID_MAX_SIZE + 1;
+	wrq.u.essid.length = IW_ESSID_MAX_SIZE + 2;
 	wrq.u.essid.flags = 0;
 	if(iw_get_ext(skfd, ifname, SIOCGIWESSID, &wrq) < 0)
 	  return(IWERR_GET_EXT);
--- a/iwevent.c
+++ b/iwevent.c
@@ -341,7 +341,7 @@ print_event_token(struct iw_event *	even
     case SIOCSIWESSID:
     case SIOCGIWESSID:
       {
-	char essid[IW_ESSID_MAX_SIZE+1];
+	char essid[4 * IW_ESSID_MAX_SIZE + 1];
 	memset(essid, '\0', sizeof(essid));
 	if((event->u.essid.pointer) && (event->u.essid.length))
 	  memcpy(essid, event->u.essid.pointer, event->u.essid.length);
--- a/iwgetid.c
+++ b/iwgetid.c
@@ -84,8 +84,8 @@ print_essid(int			skfd,
 	    int			format)
 {
   struct iwreq		wrq;
-  char			essid[IW_ESSID_MAX_SIZE + 1];	/* ESSID */
-  char			pessid[IW_ESSID_MAX_SIZE + 1];	/* Pcmcia format */
+  char			essid[IW_ESSID_MAX_SIZE + 2];	/* ESSID */
+  char			pessid[4 * IW_ESSID_MAX_SIZE + 1];	/* Printable format */
   unsigned int		i;
   unsigned int		j;
 
@@ -94,7 +94,7 @@ print_essid(int			skfd,
 
   /* Get ESSID */
   wrq.u.essid.pointer = (caddr_t) essid;
-  wrq.u.essid.length = IW_ESSID_MAX_SIZE + 1;
+  wrq.u.essid.length = IW_ESSID_MAX_SIZE + 2;
   wrq.u.essid.flags = 0;
   if(iw_get_ext(skfd, ifname, SIOCGIWESSID, &wrq) < 0)
     return(-1);
--- a/iwlib.c
+++ b/iwlib.c
@@ -716,7 +716,7 @@ iw_get_basic_config(int			skfd,
 
   /* Get ESSID */
   wrq.u.essid.pointer = (caddr_t) info->essid;
-  wrq.u.essid.length = IW_ESSID_MAX_SIZE + 1;
+  wrq.u.essid.length = IW_ESSID_MAX_SIZE + 2;
   wrq.u.essid.flags = 0;
   if(iw_get_ext(skfd, ifname, SIOCGIWESSID, &wrq) >= 0)
     {
--- a/iwlib.h
+++ b/iwlib.h
@@ -183,7 +183,7 @@ typedef struct wireless_config
   int		key_flags;		/* Various flags */
   int		has_essid;
   int		essid_on;
-  char		essid[IW_ESSID_MAX_SIZE + 1];	/* ESSID (extended network) */
+  char		essid[IW_ESSID_MAX_SIZE + 2];	/* ESSID (extended network) */
   int		has_mode;
   int		mode;			/* Operation mode */
 } wireless_config;
@@ -197,7 +197,7 @@ typedef struct wireless_info
   int		has_sens;
   iwparam	sens;			/* sensitivity */
   int		has_nickname;
-  char		nickname[IW_ESSID_MAX_SIZE + 1]; /* NickName */
+  char		nickname[IW_ESSID_MAX_SIZE + 2]; /* NickName */
   int		has_ap_addr;
   sockaddr	ap_addr;		/* Access point address */
   int		has_bitrate;
--- a/iwlist.c
+++ b/iwlist.c
@@ -491,7 +491,7 @@ print_scanning_token(struct stream_descr
       break;
     case SIOCGIWESSID:
       {
-	char essid[IW_ESSID_MAX_SIZE+1];
+	char essid[4 * IW_ESSID_MAX_SIZE + 1];
 	memset(essid, '\0', sizeof(essid));
 	if((event->u.essid.pointer) && (event->u.essid.length))
 	  memcpy(essid, event->u.essid.pointer, event->u.essid.length);
