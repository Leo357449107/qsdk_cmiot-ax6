diff -Nur --no-dereference a/linux/include/openswan/ipsec_kversion.h openswan-2.6.51.3/linux/include/openswan/ipsec_kversion.h
--- a/linux/include/openswan/ipsec_kversion.h	2019-04-04 15:03:46.602418731 -0700
+++ openswan-2.6.51.3/linux/include/openswan/ipsec_kversion.h	2019-04-04 15:04:05.726418165 -0700
@@ -127,7 +127,9 @@
 
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,12)
 # define HAVE_SOCK_ZAPPED
-# if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,24)
+# if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 4, 0)
+#  define NET_44_SKALLOC
+# elif LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,24)
 #  define NET_26_24_SKALLOC
 # else
 #  define NET_26_12_SKALLOC
diff -Nur --no-dereference a/linux/include/openswan/pfkey.h openswan-2.6.51.3/linux/include/openswan/pfkey.h
--- a/linux/include/openswan/pfkey.h	2019-04-04 15:03:46.602418731 -0700
+++ openswan-2.6.51.3/linux/include/openswan/pfkey.h	2019-04-04 15:04:40.758417128 -0700
@@ -18,6 +18,7 @@
 #define __NET_IPSEC_PF_KEY_H
 
 #include "pfkeyv2.h"
+#include <linux/version.h>
 #ifdef __KERNEL__
 extern struct proto_ops pfkey_proto_ops;
 typedef struct sock pfkey_sock;
@@ -154,14 +155,16 @@
 extern char* satype2name(uint8_t satype);
 extern char* proto2name(uint8_t proto);
 
-#if 0
 struct key_opt
 {
-  kuid_t   	key_pid;	/* process ID */
+  uint32_t	key_pid;	/* process ID */
   struct sock	*sk;            /* back pointer to PFKEY socket */
 };
 
-#define key_pid(sk) ((struct key_opt*)&((sk)->sk_protinfo))->key_pid
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 4, 0)
+# define key_pid(sk) ((struct key_opt*)&((sk)->sk_user_data))->key_pid
+#else
+# define key_pid(sk) ((struct key_opt*)&((sk)->sk_protinfo))->key_pid
 #endif
 
 /* XXX-mcr this is not an alignment, this is because the count is in 64-bit
diff -Nur --no-dereference a/linux/net/ipsec/ipsec_mast.c openswan-2.6.51.3/linux/net/ipsec/ipsec_mast.c
--- a/linux/net/ipsec/ipsec_mast.c	2019-04-04 15:03:46.598418731 -0700
+++ openswan-2.6.51.3/linux/net/ipsec/ipsec_mast.c	2019-04-04 15:04:05.726418165 -0700
@@ -108,7 +108,13 @@
 static inline int ipsec_mast_xmit2(struct sk_buff *skb)
 {
 #ifdef NETDEV_25	/* 2.6 kernels */
-	return dst_output(skb);
+
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 4, 0)
+       return dst_output(dev_net(skb->dev), skb->sk, skb);
+#else
+        return dst_output(skb);
+#endif
+
 #else
 	return ip_send(skb);
 #endif
diff -Nur --no-dereference a/linux/net/ipsec/ipsec_tunnel.c openswan-2.6.51.3/linux/net/ipsec/ipsec_tunnel.c
--- a/linux/net/ipsec/ipsec_tunnel.c	2019-04-04 15:03:46.598418731 -0700
+++ openswan-2.6.51.3/linux/net/ipsec/ipsec_tunnel.c	2019-04-04 15:04:05.730418165 -0700
@@ -147,7 +147,13 @@
 {
 
 #ifdef NETDEV_25	/* 2.6 kernels */
+
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 4, 0)
+	return dst_output(dev_net(skb->dev), skb->sk, skb);
+#else
 	return dst_output(skb);
+#endif
+
 #else
 	return ip_send(skb);
 #endif
diff -Nur --no-dereference a/linux/net/ipsec/ipsec_xmit.c openswan-2.6.51.3/linux/net/ipsec/ipsec_xmit.c
--- a/linux/net/ipsec/ipsec_xmit.c	2019-04-04 15:03:46.598418731 -0700
+++ openswan-2.6.51.3/linux/net/ipsec/ipsec_xmit.c	2019-04-04 15:04:05.730418165 -0700
@@ -2366,10 +2366,20 @@
 	}
 }
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(4, 1, 0)
 static inline int ipsec_xmit_send2(struct sk_buff *skb)
+#elif LINUX_VERSION_CODE < KERNEL_VERSION(4, 4, 0)
+static inline int ipsec_xmit_send2(struct sock *sk, struct sk_buff *skb)
+#else
+static inline int ipsec_xmit_send2(struct net *net, struct sock *sk, struct sk_buff *skb)
+#endif
 {
 #ifdef NETDEV_25	/* 2.6 kernels */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 4, 0)
+	return dst_output(dev_net(skb->dev), sk, skb);
+#else
 	return dst_output(skb);
+#endif
 #else
 	return ip_send(skb);
 #endif
@@ -2384,8 +2394,14 @@
 		skb->nfmark = 0;
 #endif
 #endif
-	return ipsec_xmit_send2(skb);
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(4, 1, 0)
+        return ipsec_xmit_send2(skb);
+#elif LINUX_VERSION_CODE < KERNEL_VERSION(4, 4, 0)
+	return ipsec_xmit_send2(skb->sk, skb);
+#else
+       return ipsec_xmit_send2(dev_net(skb->dev), skb->sk, skb);
+#endif
 }
 
 #ifdef NAT_TRAVERSAL
@@ -2637,11 +2653,25 @@
 			err = ipsec_xmit_send2_mast(ixs->skb);
 
 		else if (ip_hdr(ixs->skb)->version == 6)
-			err = NF_HOOK(PF_INET6, OSW_NF_INET_LOCAL_OUT, ixs->skb, NULL,
+			err = NF_HOOK(PF_INET6, OSW_NF_INET_LOCAL_OUT,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 4, 0)
+					dev_net(ixs->skb->dev),
+#endif
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 1, 0)
+					ixs->skb->sk,
+#endif
+					ixs->skb, NULL,
 					ixs->route ? ipsec_route_dst(ixs->route).dev : skb_dst(ixs->skb)->dev,
 					ipsec_xmit_send2);
 		else
-			err = NF_HOOK(PF_INET, OSW_NF_INET_LOCAL_OUT, ixs->skb, NULL,
+			err = NF_HOOK(PF_INET, OSW_NF_INET_LOCAL_OUT,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 4, 0)
+					dev_net(ixs->skb->dev),
+#endif
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 1, 0)
+					ixs->skb->sk,
+#endif
+					ixs->skb, NULL,
 					ixs->route ? ipsec_route_dst(ixs->route).dev : skb_dst(ixs->skb)->dev,
 					ipsec_xmit_send2);
 
diff -Nur --no-dereference a/linux/net/ipsec/pfkey_v2.c openswan-2.6.51.3/linux/net/ipsec/pfkey_v2.c
--- a/linux/net/ipsec/pfkey_v2.c	2019-04-04 15:03:46.598418731 -0700
+++ openswan-2.6.51.3/linux/net/ipsec/pfkey_v2.c	2019-04-04 15:04:05.730418165 -0700
@@ -106,7 +106,7 @@
 
 int pfkey_msg_interp(struct sock *, struct sadb_msg *);
 
-#ifdef NET_26_24_SKALLOC
+#if defined(NET_26_24_SKALLOC) || defined(NET_44_SKALLOC)
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,38)
 DEBUG_NO_STATIC int pfkey_create(struct net *net, struct socket *sock, int protocol, int kern);
 #else
@@ -670,8 +670,7 @@
 	return error;
 }
 
-#if defined(NET_26_12_SKALLOC) || defined(NET_26_24_SKALLOC)
-
+#if defined(NET_26_12_SKALLOC) || defined(NET_26_24_SKALLOC) || defined(NET_44_SKALLOC)
 static struct proto key_proto = {
 	.name	  = "KEY",
 	.owner	  = THIS_MODULE,
@@ -679,7 +678,7 @@
 
 };
 #endif
-#ifdef NET_26_24_SKALLOC
+#if defined(NET_26_24_SKALLOC) || defined(NET_44_SKALLOC)
 DEBUG_NO_STATIC int
 pfkey_create(struct net *net, struct socket *sock, int protocol
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,38)
@@ -743,6 +742,10 @@
 	KLIPS_INC_USE;
 
 #ifdef NET_26
+
+#ifdef NET_44_SKALLOC
+       sk = (struct sock *)sk_alloc(net, PF_KEY, GFP_KERNEL, &key_proto, 0);
+#else
 #ifdef NET_26_24_SKALLOC
        sk=(struct sock *)sk_alloc(net, PF_KEY, GFP_KERNEL, &key_proto);
 #else
@@ -752,6 +755,7 @@
 	sk=(struct sock *)sk_alloc(PF_KEY, GFP_KERNEL, 1, NULL);
 #endif
 #endif
+#endif
 #else
 	/* 2.4 interface */
 	sk=(struct sock *)sk_alloc(PF_KEY, GFP_KERNEL, 1);
