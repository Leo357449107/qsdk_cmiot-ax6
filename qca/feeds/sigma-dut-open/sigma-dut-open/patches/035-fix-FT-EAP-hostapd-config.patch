--- a/ap.c
+++ b/ap.c
@@ -8081,14 +8081,14 @@ enum sigma_cmd_result cmd_ap_config_comm
 			fprintf(f, "wpa=1\n");
 		switch (dut->ap_pmf) {
 		case AP_PMF_DISABLED:
-			fprintf(f, "wpa_key_mgmt=WPA-EAP%s\n",
-				dut->ap_add_sha256 ? " WPA-EAP-SHA256" : "");
+			if (dut->ap_add_sha256)
+				fprintf(f, "wpa_key_mgmt=WPA-EAP WPA-EAP-SHA256\n");
 			break;
 		case AP_PMF_OPTIONAL:
-			fprintf(f, "wpa_key_mgmt=WPA-EAP%s%s\n",
-				dut->ap_add_sha256 ? " WPA-EAP-SHA256" : "",
-				dut->ap_key_mgmt == AP_WPA2_EAP_OSEN ? " OSEN" :
-				"");
+			if (dut->ap_add_sha256)
+				fprintf(f, "wpa_key_mgmt=WPA-EAP WPA-EAP-SHA256%s\n",
+					dut->ap_key_mgmt == AP_WPA2_EAP_OSEN ? " OSEN" :
+					"");
 			break;
 		case AP_PMF_REQUIRED:
 			fprintf(f, "wpa_key_mgmt=WPA-EAP-SHA256%s\n",
@@ -8102,6 +8102,8 @@ enum sigma_cmd_result cmd_ap_config_comm
 			fprintf(f, "wpa_key_mgmt=FT-EAP\n");
 		else if (dut->ap_key_mgmt == AP_WPA2_ENT_FT_EAP)
 			fprintf(f, "wpa_key_mgmt=FT-EAP WPA-EAP\n");
+		else
+			fprintf(f, "wpa_key_mgmt=WPA-EAP\n");
 		fprintf(f, "wpa_pairwise=%s\n",
 			hostapd_cipher_name(dut->ap_cipher));
 		if (dut->ap_group_cipher != AP_NO_GROUP_CIPHER_SET)
@@ -8237,8 +8239,8 @@ skip_key_mgmt:
 				dut->ap_group_mgmt_cipher));
 
 	if (ap_ft_enabled(dut)) {
-		unsigned char own_addr[ETH_ALEN];
-		unsigned char ap2_addr[20];
+		unsigned char own_addr[ETH_ALEN], ap2_addr[ETH_ALEN];
+		char own_addr_str[20], ap2_addr_str[20];
 
 		fprintf(f, "mobility_domain=%s\n",
 			atoi(dut->ap_mobility_domain) ? dut->ap_mobility_domain : "0101");
@@ -8247,35 +8249,48 @@ skip_key_mgmt:
 			memset(own_addr, 0, ETH_ALEN);
 			own_addr[0] = 0x02;
 		}
+
+		snprintf(own_addr_str, sizeof(own_addr_str),
+			 "%02x%02x%02x%02x%02x%02x",
+			 own_addr[0], own_addr[1], own_addr[2],
+			 own_addr[3], own_addr[4], own_addr[5]);
+
 		if (dut->program == PROGRAM_MBO)
 			fprintf(f,
-				"nas_identifier=nas2.example.com\n");
+				"nas_identifier=%s\n", own_addr_str);
 		else
 			fprintf(f,
-				"nas_identifier=%02x%02x%02x%02x%02x%02x.nas.example.com\n",
-				own_addr[0], own_addr[1], own_addr[2],
-				own_addr[3], own_addr[4], own_addr[5]);
-		fprintf(f, "r1_key_holder=%02x%02x%02x%02x%02x%02x\n",
-			own_addr[0], own_addr[1], own_addr[2],
-			own_addr[3], own_addr[4], own_addr[5]);
-		snprintf(ap2_addr, sizeof(ap2_addr),
-			 "%02x:%02x:%02x:%02x:%02x:%02x",
-			 dut->ft_bss_mac_list[0][0],
-			 dut->ft_bss_mac_list[0][1],
-			 dut->ft_bss_mac_list[0][2],
-			 dut->ft_bss_mac_list[0][3],
-			 dut->ft_bss_mac_list[0][4],
-			 dut->ft_bss_mac_list[0][5]);
-		fprintf(f, "ft_psk_generate_local=1\n");
+				"nas_identifier=%s.nas.example.com\n",
+				own_addr_str);
+
+		fprintf(f, "r1_key_holder=%s\n", own_addr_str);
+		memcpy(ap2_addr, dut->ft_bss_mac_list[0], ETH_ALEN);
+		snprintf(ap2_addr_str, sizeof(ap2_addr_str),
+			 "%02x%02x%02x%02x%02x%02x",
+			 ap2_addr[0], ap2_addr[1], ap2_addr[2],
+			 ap2_addr[3], ap2_addr[4], ap2_addr[5]);
+
+		if (dut->ap_key_mgmt == AP_WPA2_FT_PSK)
+			fprintf(f, "ft_psk_generate_local=1\n");
+
 		fprintf(f, "pmk_r1_push=0\n");
 		if (dut->program == PROGRAM_MBO) {
 			fprintf(f,
-				"r0kh=%02x:%02x:%02x:%02x:%02x:%02x * 00112233445566778899aabbccddeeff00112233445566778899aabbccddeeff\n",
+				"r0kh=%02x:%02x:%02x:%02x:%02x:%02x %s 000102030405060708090a0b0c0d0e0f\n",
 				own_addr[0], own_addr[1], own_addr[2],
-				own_addr[3], own_addr[4], own_addr[5]);
+				own_addr[3], own_addr[4], own_addr[5],
+				own_addr_str);
 			fprintf(f,
-				"r1kh=%s %s 00112233445566778899aabbccddeeff00112233445566778899aabbccddeeff\n",
-				ap2_addr, ap2_addr);
+				"r0kh=%02x:%02x:%02x:%02x:%02x:%02x %s 000102030405060708090a0b0c0d0e0f\n",
+				ap2_addr[0], ap2_addr[1], ap2_addr[2],
+				ap2_addr[3], ap2_addr[4], ap2_addr[5],
+				ap2_addr_str);
+			fprintf(f,
+				"r1kh=%02x:%02x:%02x:%02x:%02x:%02x %02x:%02x:%02x:%02x:%02x:%02x 000102030405060708090a0b0c0d0e0f\n",
+				ap2_addr[0], ap2_addr[1], ap2_addr[2],
+				ap2_addr[3], ap2_addr[4], ap2_addr[5],
+				ap2_addr[0], ap2_addr[1], ap2_addr[2],
+				ap2_addr[3], ap2_addr[4], ap2_addr[5]);
 		} else {
 			fprintf(f,
 				"r0kh=ff:ff:ff:ff:ff:ff * 00112233445566778899aabbccddeeff00112233445566778899aabbccddeeff\n");
@@ -8599,6 +8614,8 @@ skip_key_mgmt:
                                 fprintf(f_1, "auth_server_shared_secret=%s\n",
                                                 dut->ap_radius_password);
                                 break;
+			default:
+                                break;
                 }
                 fclose(f_1);
         }
